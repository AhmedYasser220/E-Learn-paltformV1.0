{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/e-learning-platform/SW-Project/Backend/Frontend/front/src/app/api/courses/route.ts"],"sourcesContent":["// src/app/api/courses/route.ts\r\n\r\nimport { NextResponse } from 'next/server';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:4000'; // Replace with your backend base URL\r\n\r\nexport async function GET() {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/courses/courses`);\r\n    return NextResponse.json(response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching courses:', error);\r\n    return NextResponse.json({ error: 'Failed to fetch courses' }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\nexport async function PUT(req: Request, { params }: { params: { id: string } }) {\r\n  const { id } = params; // Extract course ID from the route\r\n  const updateData = await req.json(); // Parse the request body\r\n\r\n  try {\r\n    const response = await axios.put(`${BASE_URL}/courses/${id}`, updateData);\r\n    return NextResponse.json(response.data);\r\n  } catch (error) {\r\n    console.error('Error updating course:', error);\r\n    return NextResponse.json({ error: 'Failed to update course' }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAE/B;AACA;;;AAEA,MAAM,WAAW,yBAAyB,qCAAqC;AAExE,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,gBAAgB,CAAC;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF;AAGO,eAAe,IAAI,GAAY,EAAE,EAAE,MAAM,EAA8B;IAC5E,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,mCAAmC;IAC1D,MAAM,aAAa,MAAM,IAAI,IAAI,IAAI,yBAAyB;IAE9D,IAAI;QACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,SAAS,SAAS,EAAE,IAAI,EAAE;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI;IACxC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA0B,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}